syntax = "proto3";

option go_package = "lotof.hub.proto/lotof.hub.msvc.namespaces/ns";

package nsService;

import "generic/utils/filter.proto";
import "generic/utils/list.proto";

service NamespaceService {
  rpc GetNamespaces(GetNamespacesRequest) returns (GetNamespacesResponse);
  rpc GetNamespace(GetNamespaceRequest) returns (Namespace);
  rpc CreateNamespace(NamespaceRequest) returns (Namespace);
  rpc UpdateNamespace(UpdateNamespaceRequest) returns (Namespace);

  rpc AddAppToNamespace(AddAppToNamespaceRequest) returns (NamespaceApp);
  rpc NamespacesByApp(NamespacesByAppRequest) returns (NamespacesByAppResponse);
}

message GetNamespacesRequest {
  string search = 1;
  genericUtils.Pagination pagination = 2;
  genericUtils.Sort sort = 3;
}

message GetNamespacesResponse {
  PaginatedNamespaceList namespaces = 1;
}

message PaginatedNamespaceList {
  repeated Namespace rows = 1;
  genericUtils.PaginationInfo info = 2;
}

message GetNamespaceRequest {
  string id = 1;
}

message Namespace {
  string id = 1; // UUID
  string title = 2;
  string slug = 3;
  string description = 4;
  string owner = 5; // User ID
}

message NamespaceRequest {
  string title = 1;
  string slug = 2;
  string description = 3;
}

message UpdateNamespaceRequest {
  string id = 1;
  string title = 2;
  string slug = 3;
  string description = 4;
}

message AddAppToNamespaceRequest {
  string namespace_id = 1; // UUID
  string app_bundle = 2;   // App Bundle Name
}

message NamespaceApp {
  string id = 1;           // UUID
  string namespace_id = 2; // Namespace UUID
  string app_bundle = 3;   // App Bundle Name
}

message NamespacesByAppRequest {
  string app_bundle = 1; // App Bundle Name
}

message NamespacesByAppResponse {
  repeated EncryptedTenant tenants = 1;
}

message EncryptedTenant {
  string namespace = 1;   // Namespace slug
  string credentials = 2; // Encrypted "username:password"
}

